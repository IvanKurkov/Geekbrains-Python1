# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
#
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам
# не остановит работу скрипта, введя, например, команду “stop”. При этом скрипт завершается,
# сформированный список выводится на экран.
#
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и
# отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.


class MyError2(Exception):
    def __init__(self, txterr):
        self.txterr = txterr


userlist = []
while True:
    i = input("Введите значение или введите 'stop', для окончания ввода ")
    if i == "stop":
        break
    else:
        try:
            if not i.isdigit():
                raise MyError2(f"Элемент '{i}' не число")
        except MyError2 as err2:
            print(err2)
        else:
            userlist.append(int(i))
print(userlist)
